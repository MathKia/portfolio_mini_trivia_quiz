type hint =

    when you cast a variable with a certain data type at first, and later when you try to assign it value,
    it can only be of that data type it was earlier cast to

-> initial casting using type hint denoted by ':'

    age: int
    name: str
    height: float
    is_human: bool


    -> later when assigning value
    age = 'twelve' -> will give error because you casted it as an int earlier
                   -> basically age is now a strong casted variable
    age = 12 -> will work because it is value of int data type

    type hint can also work in functions

    def police_check(age: int):         -> we are stipulating we must have int value passed in age argument
        if age>18:
            can_drive = True
        else:
            can_drive = False
        return can_drive

    if police_check("twelve"):    -> will underline "twelve" as it is not int, did twelve instead of 12
        print("You may pass")
    else:
        print("Pay a fine")


Arrows:

    we can also specify the data type expected of an output by using '->'

    def police_check(age: int) -> bool:    ->  this function expects to return bool data type
        if age>18:
            can_drive = True
        else:
            can_drive = False
        return "They can drive"  -> will be underlined to show we expect a bool not str output

    if police_check(12):
        print("You may pass")
    else:
        print("Pay a fine")




